name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  workflow_dispatch:  # Allow manual trigger of the workflow

jobs:
  build:
    runs-on: ubuntu-latest
    environment: python-docker  # Add the environment name

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub securely using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Get short commit SHA using shell command
      - name: Get short commit SHA
        id: short_sha
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)" >> $GITHUB_ENV

      # Step 5: Get the current date in UTC format
      - name: Get date
        id: date_time
        run: echo "DATE_TIME=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

      # Step 6: Retrieve or initialize the version counter for the day
      - name: Retrieve version counter
        id: version_counter
        run: |
          VERSION_FILE="version_counter.txt"
          if [[ -f "$VERSION_FILE" ]]; then
            VERSION=$(cat "$VERSION_FILE")
            VERSION=$((VERSION + 1))
          else
            VERSION=1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo $VERSION > "$VERSION_FILE"

      # Step 7: Build and push Docker image with dynamic tags
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            sachinfe/app:latest
            sachinfe/app:${{ github.ref_name }}
            sachinfe/app:${{ env.SHORT_SHA }}
            sachinfe/app:${{ github.ref_name }}-${{ env.DATE_TIME }}-v${{ env.VERSION }}
